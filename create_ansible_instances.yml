---
- name: baue ec2 instanzen f체r einen ansible workshop
  hosts:
    - localhost
  gather_facts: no

  tasks:
    - name: loesche altes Inventory
      file:
        path: ./inventory
        state: absent
    - name: f체hre terraform aus
      terraform:
        project_path: ./
        state: present
        force_init: true
      register: terraform_output
    - debug:
        var: terraform_output
    - name: Erzeuge dynamisches Inventory
      add_host:
        name: "{{ item }}"
        groups: ec2instances
      loop: "{{ terraform_output.outputs.IP_Adressen.value }}"
    - name: Erzeuge statisches Inventory
      lineinfile:
        path: ./inventory
        line: "{{ item }}"
        create: yes
        mode: 0644
      loop: "{{ terraform_output.outputs.IP_Adressen.value }}"  

- name: setze das Passwort f체r ec2-user und erlaube login
  hosts:
    - ec2instances
  become: yes
  remote_user: ec2-user
  vars:
    - ansible_ssh_private_key_file: "../../gdcjmcm/key/gdcjmcm.pem"

  tasks:
    - name: wait for connection
      wait_for_connection:
        delay: 30                 # probiere nach 30 Sekunden
        timeout: 60              # Timeout nach 1 Minute
    - name: setze Passwort
      shell: 'echo abc123 | passwd --stdin ec2-user'
    - name: 채ndre sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication no'
        line: 'PasswordAuthentication yes'
      notify: ssh_restart

  handlers:
    - name: ssh_restart
      service:
        name: sshd
        state: restarted
          